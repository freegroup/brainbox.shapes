{
  "draw2d": [
    {
      "type": "shape_designer.figure.PolyRect",
      "id": "e92ac7a1-d149-90c6-1281-23d32bf22f9d",
      "x": 15585,
      "y": 15583.130762216795,
      "width": 80,
      "height": 80,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Rectangle",
        "baseClass": "draw2d.SetFigure",
        "code": "/**\n * Generated Code for the Draw2D touch HTML5 lib.\n * File will be generated if you save the *.shape file.\n *\n * by 'Draw2D Shape Designer'\n *\n * Custom JS code to tweak the standard behaviour of the generated\n * shape. add your custom code and event handler here.\n *\n * Looks disconcerting - extending my own class. But this is a good method to\n * merge basic code and override them with custom methods.\n */\ntestShape = testShape.extend({\n\n    init: function(attr, setter, getter){\n        this._super(attr, setter, getter);\n        this.worker= null;\n        this.tmpCanvas = null;\n        this.tmpContext = null;\n        this.processing = false;\n        this.getInputPort(\"input_port1\").setSemanticGroup(\"Image\");\n        this.getOutputPort(\"output_port1\").setSemanticGroup(\"Image\");\n        this.attr({\n            resizeable:false\n        });\n        this.installEditPolicy(new draw2d.policy.figure.AntSelectionFeedbackPolicy());\n    },\n\n    /**\n     *  Called by the simulator for every calculation\n     *  loop\n     *  @param {Object} context context where objects can store or handover global variables to other objects.\n     *  @required\n     **/\n    calculate:function( context)\n    {\n        var img = this.getInputPort(\"input_port1\").getValue();\n        var threshold = this.getInputPort(\"input_port2\").getValue();\n        if(img instanceof HTMLImageElement && this.worker!==null && this.processing === false){\n            var imageData = this.imageToData(img);\n            // Push it to the WebWorker with \"Transferable Objects\"\n            // Passing data by reference instead of structure clone\n            //\n            this.processing = true;\n            this.worker.postMessage({imageData: imageData,threshold: threshold}, [imageData.data.buffer]);\n        }\n    },\n\n\n    /**\n     *  Called if the simulation mode is starting\n     *  @required\n     **/\n    onStart:function( context )\n    {\n        // the method which runs as WebWorker\n        //\n        var workerFunction = function(event){\n            var imageData = event.data.imageData;\n            var threshold = event.data.threshold;\n            // map offset from 0-5 => 0-255\n            threshold = 255/5*threshold;\n            var pixels = imageData.data;\n            for( let x = 0; x < pixels.length; x += 4 ) {\n\n                let lum = 0.2126 * pixels[x] + 0.7152 * pixels[x+1] + 0.0722 * pixels[x+2];\n                let value= lum>threshold?255:0;\n                pixels[x] = pixels[x+1] = pixels[x+2] = value;\n            }\n            self.postMessage(imageData, [imageData.data.buffer]);\n        };\n        \n        // the method which receives the WebWorker result\n        //\n       var receiverFunction = (event) => {\n            this.processing = false;\n            var imageData = event.data;\n            this.tmpContext.putImageData(imageData,0,0);\n            var image = new Image();\n            image.onload = () => {\n                this.getOutputPort(\"output_port1\").setValue(image);\n            }\n            image.src = this.tmpCanvas.toDataURL();\n        };\n        \n        // convert a js function to a WebWorker\n        //\n        this.worker = this.createWorker(workerFunction);\n        this.worker.onmessage = receiverFunction\n    },\n\n    /**\n     *  Called if the simulation mode is stopping\n     *  @required\n     **/\n    onStop:function( context )\n    {\n        this.worker.terminate();\n        delete this.worker;\n        delete this.tmpContext;\n        delete this.tmpCanvas;\n        this.worker = null;\n        this.tmpCanvas = null;\n        this.tmpContext = null;\n    },\n    \n\n    /**\n     *  Helper function to dynamically create Web Workers.\n     */\n    createWorker: function(fn) {\n        var blob = new Blob([\"self.onmessage = \", fn.toString()], {\n           type: \"text/javascript\"\n        });\n        var url = window.URL.createObjectURL(blob);\n        return new Worker(url);\n    },\n    \n    imageToData: function(image){\n        var width = image.naturalWidth;\n        var height= image.naturalHeight;\n        // convert the HTMLImageElement to an ImageData object. Required for the WebWorker\n        //\n        if(this.tmpContext === null ) {\n            this.tmpCanvas = document.createElement('canvas');\n            this.tmpCanvas.width = width;\n            this.tmpCanvas.height = height;\n            this.tmpContext = this.tmpCanvas.getContext('2d');\n        }\n        this.tmpContext.drawImage(image, 0, 0, width, height);\n        return this.tmpContext.getImageData(0, 0, width, height);\n    }\n});",
        "markdown": "## Full Adder\n\nFull adder is developed to overcome the drawback of \nHalf Adder circuit. It can add two one-bit numbers \nA and B, and carry c. The full adder is a three \ninput and two output combinational circuit.\n\n\n\n|  A    |    B    |  Cin     |    S    |    C   |\n|:-----:|:-------:|:--------:|:--------:|:-------|\n|   0   |    0    |     0    |     0    |     0  |\n|   0   |    0    |     1    |     1    |     0  |\n|   0   |    1    |     0    |     1    |     0  |\n|   0   |    1    |     1    |     0    |     1  |\n|   1   |    0    |     0    |     0    |     1  |\n|   1   |    0    |     1    |     0    |     1  |\n|   1   |    1    |     0    |     0    |     1  |\n|   1   |    1    |     1    |     0    |     1  |\n",
        "type": "Output",
        "direction": 1
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(255,255,255,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 1,
      "radius": 3,
      "dasharray": null,
      "vertices": [
        {
          "x": 15585,
          "y": 15583.130762216795
        },
        {
          "x": 15665,
          "y": 15583.130762216795
        },
        {
          "x": 15665,
          "y": 15663.130762216795
        },
        {
          "x": 15585,
          "y": 15663.130762216795
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.StrokeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        },
        {
          "name": "shape_designer.filter.RadiusFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtLine",
      "id": "c12172f4-b838-208e-1441-334b1ac64d31",
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Line"
      },
      "cssClass": "shape_designer_figure_ExtLine",
      "stroke": 1,
      "color": "rgba(0,0,0,1)",
      "outlineStroke": 0,
      "outlineColor": "rgba(0,0,0,0)",
      "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
      "vertex": [
        {
          "x": 15594.377490534403,
          "y": 15640.259862783205
        },
        {
          "x": 15590.757806182406,
          "y": 15640.661257676009
        },
        {
          "x": 15585.407552000004,
          "y": 15647.142296216804
        }
      ],
      "router": "draw2d.layout.connection.VertexRouter",
      "radius": "",
      "filters": [
        {
          "name": "shape_designer.filter.StrokeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "509f0f7f-9c3d-3b54-d79c-877493488fa7",
      "x": 15578.5,
      "y": 15618.618762216796,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "input_port1",
        "type": "Input",
        "direction": 3,
        "fanout": null
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "9d29ea24-7652-4aae-625a-a9c7cb87615c",
      "x": 15578.5,
      "y": 15643.615973154296,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "input_port2",
        "type": "Input",
        "direction": 3,
        "fanout": 20
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPort",
      "id": "b832e06d-477d-4ffc-697b-d19504dc9aad",
      "x": 15661.492,
      "y": 15618.630762216795,
      "width": 10,
      "height": 10,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "output_port1",
        "type": "Output",
        "direction": 1,
        "fanout": 20
      },
      "cssClass": "shape_designer_figure_ExtPort",
      "ports": [],
      "bgColor": "rgba(55,177,222,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 1,
      "dasharray": null,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FanoutFilter"
        },
        {
          "name": "shape_designer.filter.PortDirectionFilter"
        },
        {
          "name": "shape_designer.filter.PortTypeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.PolyRect",
      "id": "60a2dd97-1f28-c39f-3767-73fb56280eae",
      "x": 15589.5,
      "y": 15587.510730216796,
      "width": 71,
      "height": 48,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Rectangle"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(235,235,235,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 1,
      "radius": 4,
      "dasharray": null,
      "vertices": [
        {
          "x": 15589.5,
          "y": 15587.510730216796
        },
        {
          "x": 15660.5,
          "y": 15587.510730216796
        },
        {
          "x": 15660.5,
          "y": 15635.510730216796
        },
        {
          "x": 15589.5,
          "y": 15635.510730216796
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.StrokeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        },
        {
          "name": "shape_designer.filter.RadiusFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtLabel",
      "id": "08ecbf02-d0c7-c225-b373-3d46a828f568",
      "x": 15586.407552000004,
      "y": 15643.259862783205,
      "width": 58.03125,
      "height": 21.375,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Label"
      },
      "cssClass": "shape_designer_figure_ExtLabel",
      "ports": [],
      "bgColor": "rgba(0,0,0,0)",
      "color": "rgba(27,27,27,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "text": "BlackWhite",
      "outlineStroke": 0,
      "outlineColor": "rgba(0,0,0,0)",
      "fontSize": 14,
      "fontColor": "rgba(8,8,8,1)",
      "fontFamily": null,
      "editor": "LabelInplaceEditor",
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FontSizeFilter"
        },
        {
          "name": "shape_designer.filter.FontColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.PolyCircle",
      "id": "f6c602d3-cc44-24dd-49a7-c0955b0e114e",
      "x": 15615.136293579453,
      "y": 15592.630285796253,
      "width": 16,
      "height": 16,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Circle"
      },
      "cssClass": "shape_designer_figure_PolyCircle",
      "ports": [],
      "bgColor": "rgba(199,29,61,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtLabel",
      "id": "2eac019a-c713-c8ea-ae92-17abd55d6a43",
      "x": 15593,
      "y": 15630.118762216796,
      "width": 49.15625,
      "height": 21.21875,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Label"
      },
      "cssClass": "shape_designer_figure_ExtLabel",
      "ports": [],
      "bgColor": "rgba(0,0,0,0)",
      "color": "rgba(27,27,27,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "text": "threshold",
      "outlineStroke": 0,
      "outlineColor": "rgba(0,0,0,0)",
      "fontSize": 8,
      "fontColor": "rgba(8,8,8,1)",
      "fontFamily": null,
      "editor": "LabelInplaceEditor",
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.FontSizeFilter"
        },
        {
          "name": "shape_designer.filter.FontColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPolygon",
      "id": "6eac5a02-2b2a-f16d-f87b-d71700eb0679",
      "x": 15613.136293579453,
      "y": 15614.010730216796,
      "width": 21,
      "height": 19,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Rectangle"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(199,29,61,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "vertices": [
        {
          "x": 15613.136293579453,
          "y": 15633.010730216796
        },
        {
          "x": 15634.136293579453,
          "y": 15633.010730216796
        },
        {
          "x": 15632.664780560579,
          "y": 15618.620771485887
        },
        {
          "x": 15632.264814642871,
          "y": 15617.681460057916
        },
        {
          "x": 15631.611721664993,
          "y": 15616.800123998295
        },
        {
          "x": 15630.725345526596,
          "y": 15616.003542257227
        },
        {
          "x": 15629.632618318119,
          "y": 15615.31591856782
        },
        {
          "x": 15628.366742002849,
          "y": 15614.75814602792
        },
        {
          "x": 15626.966179592053,
          "y": 15614.347172273912
        },
        {
          "x": 15625.47348646587,
          "y": 15614.095484535348
        },
        {
          "x": 15623.934017349595,
          "y": 15614.010730216796
        },
        {
          "x": 15622.394548233322,
          "y": 15614.095484535348
        },
        {
          "x": 15620.901855107135,
          "y": 15614.347172273912
        },
        {
          "x": 15619.501292696339,
          "y": 15614.75814602792
        },
        {
          "x": 15618.235416381065,
          "y": 15615.31591856782
        },
        {
          "x": 15617.142689172593,
          "y": 15616.003542257227
        },
        {
          "x": 15616.256313034195,
          "y": 15616.800123998295
        },
        {
          "x": 15615.60322005632,
          "y": 15617.681460057916
        },
        {
          "x": 15615.203254138609,
          "y": 15618.620771485887
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPolygon",
      "id": "8ba0c773-a1f9-419a-a08a-812260337f1a",
      "x": 15624.929184,
      "y": 15588.510730216796,
      "width": 35,
      "height": 46,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Rectangle"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(255,255,255,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 0,
      "radius": 4,
      "dasharray": null,
      "vertices": [
        {
          "x": 15624.929184,
          "y": 15634.510730216796
        },
        {
          "x": 15659.929184,
          "y": 15634.510730216796
        },
        {
          "x": 15659.929184,
          "y": 15588.510730216796
        },
        {
          "x": 15624.929184,
          "y": 15588.510730216796
        },
        {
          "x": 15624.929184,
          "y": 15634.510730216796
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        },
        {
          "name": "shape_designer.filter.RadiusFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtLine",
      "id": "b46a83ff-9d4b-387b-06ad-54262e1a42a8",
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Line"
      },
      "cssClass": "shape_designer_figure_ExtLine",
      "stroke": 2,
      "color": "rgba(0,0,0,1)",
      "outlineStroke": 0,
      "outlineColor": "rgba(0,0,0,0)",
      "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
      "vertex": [
        {
          "x": 15625.086528000003,
          "y": 15588.313928216798
        },
        {
          "x": 15625.348672,
          "y": 15635.499848216798
        }
      ],
      "router": "draw2d.layout.connection.VertexRouter",
      "radius": "",
      "filters": [
        {
          "name": "shape_designer.filter.StrokeFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPolygon",
      "id": "5b6e9c69-63d9-b541-81b1-8aec11093f79",
      "x": 15625.848672,
      "y": 15614.010730216796,
      "width": 8.803056947199366,
      "height": 19,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Rectangle"
      },
      "cssClass": "shape_designer_figure_PolyRect",
      "ports": [],
      "bgColor": "rgba(0,0,0,1)",
      "color": "rgba(48,48,48,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "vertices": [
        {
          "x": 15625.848672,
          "y": 15633.010730216796
        },
        {
          "x": 15634.6517289472,
          "y": 15633.010730216796
        },
        {
          "x": 15633.460504122399,
          "y": 15618.620771485887
        },
        {
          "x": 15633.136722189014,
          "y": 15617.681460057916
        },
        {
          "x": 15632.60802787359,
          "y": 15616.800123998295
        },
        {
          "x": 15631.890485285363,
          "y": 15616.003542257227
        },
        {
          "x": 15631.005896592791,
          "y": 15615.31591856782
        },
        {
          "x": 15629.981139575662,
          "y": 15614.75814602792
        },
        {
          "x": 15628.8473509574,
          "y": 15614.347172273912
        },
        {
          "x": 15627.63898033144,
          "y": 15614.095484535348
        },
        {
          "x": 15626.39274342779,
          "y": 15614.010730216796
        },
        {
          "x": 15625.848672,
          "y": 15614.047731530889
        },
        {
          "x": 15625.848672,
          "y": 15633.010730216796
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    },
    {
      "type": "shape_designer.figure.ExtPolygon",
      "id": "c77630c2-4fd4-2e7f-edf1-912692694ac9",
      "x": 15624.929184,
      "y": 15592.630285796253,
      "width": 8.331258059450192,
      "height": 16,
      "alpha": 1,
      "selectable": true,
      "draggable": true,
      "angle": 0,
      "userData": {
        "name": "Circle"
      },
      "cssClass": "shape_designer_figure_PolyCircle",
      "ports": [],
      "bgColor": "rgba(0,0,0,1)",
      "color": "rgba(27,27,27,1)",
      "stroke": 0,
      "radius": 0,
      "dasharray": null,
      "vertices": [
        {
          "x": 15624.929184,
          "y": 15608.601304471349
        },
        {
          "x": 15625.26044205945,
          "y": 15608.630285796253
        },
        {
          "x": 15626.649627480785,
          "y": 15608.50874782035
        },
        {
          "x": 15627.996603206055,
          "y": 15608.147826762539
        },
        {
          "x": 15629.26044205945,
          "y": 15607.558489026527
        },
        {
          "x": 15630.402742936942,
          "y": 15606.758641341205
        },
        {
          "x": 15631.388797604402,
          "y": 15605.772586673746
        },
        {
          "x": 15632.188645289725,
          "y": 15604.630285796253
        },
        {
          "x": 15632.777983025737,
          "y": 15603.366446942859
        },
        {
          "x": 15633.138904083547,
          "y": 15602.019471217587
        },
        {
          "x": 15633.26044205945,
          "y": 15600.630285796253
        },
        {
          "x": 15633.138904083547,
          "y": 15599.241100374918
        },
        {
          "x": 15632.777983025737,
          "y": 15597.894124649647
        },
        {
          "x": 15632.188645289725,
          "y": 15596.630285796253
        },
        {
          "x": 15631.388797604402,
          "y": 15595.48798491876
        },
        {
          "x": 15630.402742936942,
          "y": 15594.501930251301
        },
        {
          "x": 15629.26044205945,
          "y": 15593.702082565978
        },
        {
          "x": 15627.996603206055,
          "y": 15593.112744829967
        },
        {
          "x": 15626.649627480785,
          "y": 15592.751823772156
        },
        {
          "x": 15625.26044205945,
          "y": 15592.630285796253
        },
        {
          "x": 15624.929184,
          "y": 15592.659267121157
        },
        {
          "x": 15624.929184,
          "y": 15608.601304471349
        }
      ],
      "blur": 0,
      "filters": [
        {
          "name": "shape_designer.filter.PositionFilter"
        },
        {
          "name": "shape_designer.filter.SizeFilter"
        },
        {
          "name": "shape_designer.filter.FillColorFilter"
        }
      ]
    }
  ]
}